apiVersion: v1
kind: ConfigMap
metadata:
  name: data
  labels:
    name: data
  namespace: {{ gcs_namespace }}
data:
  config: |-

    apiVersion: 1

    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus.gcs.svc:9090
      access: proxy
      basicAuth: false
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: {{ gcs_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:5.3.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 2500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/grafana/provisioning/datasources
          name: data
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: false
        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-storage-resources-glusterfs-pv
          name: grafana-dashboard-k8s-storage-resources-glusterfs-pv
          readOnly: false
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          configMap:
             name: data
             items:
              - key: config
                path: datasource.yml
        - configMap:
            name: grafana-dashboards
          name: grafana-dashboards
        - configMap:
            name: grafana-dashboard-k8s-storage-resources-glusterfs-pv
          name: grafana-dashboard-k8s-storage-resources-glusterfs-pv
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ gcs_namespace }}
spec:
  type: NodePort
  ports:
  - name: http
    nodePort: 30800
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
---
apiVersion: v1
data:
  dashboards.yaml: |-
    {
        "apiVersion": 1,
        "providers": [
            {
                "folder": "",
                "name": "0",
                "options": {
                    "path": "/grafana-dashboard-definitions/0"
                },
                "orgId": 1,
                "type": "file"
            }
        ]
    }
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: gcs
