---
apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: {{ gcs_namespace }}
  labels:
    app.kubernetes.io/part-of: gcs
    app.kubernetes.io/component: etcd
    app.kubernetes.io/name: etcd-service
spec:
  publishNotReadyAddresses: true
  ports:
  - port: 2379
    name: client
  - port: 2380
    name: peer
  clusterIP: None
  selector:
    app.kubernetes.io/part-of: gcs
    app.kubernetes.io/component: etcd
    app.kubernetes.io/name: etcd
---
apiVersion: v1
kind: Service
metadata:
  name: etcd-client
  namespace: {{ gcs_namespace }}
  labels:
    app.kubernetes.io/part-of: gcs
    app.kubernetes.io/component: etcd
    app.kubernetes.io/name: etcd-client-service
spec:
  publishNotReadyAddresses: true
  ports:
  - port: 2379
    name: client
  - port: 2380
    name: peer
  selector:
    app.kubernetes.io/part-of: gcs
    app.kubernetes.io/component: etcd
    app.kubernetes.io/name: etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: {{ gcs_namespace }}
  labels:
    app.kubernetes.io/part-of: gcs
    app.kubernetes.io/component: etcd
    app.kubernetes.io/name: etcd
spec:
  serviceName: etcd
  selector:
    matchLabels:
      app.kubernetes.io/part-of: gcs
      app.kubernetes.io/component: etcd
      app.kubernetes.io/name: etcd
  replicas: 3
  template:
    metadata:
      name: etcd
      namespace: {{ gcs_namespace }}
      labels:
        app.kubernetes.io/part-of: gcs
        app.kubernetes.io/component: etcd
        app.kubernetes.io/name: etcd
    spec:
      containers:
      - name: "etcd"
        image: "quay.io/coreos/etcd:v3.3.11"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        env:
        - name: CLUSTER_SIZE
          value: "3"
        - name: SET_NAME
          value: "etcd"
          # https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/maintenance.md#auto-compaction
        - name: ETCD_AUTO_COMPACTION_MODE
          value: "periodic"
        - name: ETCD_AUTO_COMPACTION_RETENTION
          value: "5m"
        - name: ETCD_SNAPSHOT_COUNT
          value: "10000"
        - name: ETCD_QUOTA_BACKEND_BYTES
          value: "8589934592"    # 8 * 1024 * 1024 * 1024 = 8GiB
        - name: ETCD_MAX_REQUEST_BYTES
          value: "5242880"   # 5 * 1024 * 1024 = 5MB
        volumeMounts:
        - name: data
          mountPath: /var/run/etcd
        command:
          - "/bin/sh"
          - "-ecx"
          - |
            IP=$(hostname -i)

            # there's no need to wait since it'll cause problems when
            # restarting an already initialized cluster if a pod cannot be
            # scheduled since its related endpoint (and so dns entry) won't be
            # created During initialization etcd will fail to resolve the name
            # and retry.
            #
            #for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
            #  while true; do
            #    echo "Waiting for ${SET_NAME}-${i}.${SET_NAME} to come up"
            #    ping -W 1 -c 1 ${SET_NAME}-${i}.${SET_NAME} > /dev/null && break
            #    sleep 1s
            #  done
            #done

            PEERS=""
            for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
                PEERS="${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:2380"
            done

            # start etcd. If cluster is already initialized the `--initial-*` options will be ignored.
            exec etcd --name ${HOSTNAME} \
              --listen-peer-urls http://${IP}:2380 \
              --listen-client-urls http://${IP}:2379,http://127.0.0.1:2379 \
              --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \
              --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
              --initial-cluster-token etcd-cluster-1 \
              --initial-cluster ${PEERS} \
              --initial-cluster-state new \
              --data-dir /var/run/etcd/default.etcd

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      storageClassName: local-storage
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi
